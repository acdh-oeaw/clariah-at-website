---
import MainContent from "@/components/main-content.astro";
import PageCard from "@/components/page-card.astro";
import PageSection from "@/components/page-section.astro";
import PageTitle from "@/components/page-title.astro";
import { locales } from "@/config/i18n.config";
import PageLayout from "@/layouts/page-layout.astro";
import { getCollectionName } from "@/lib/content/get-collection-name";
import { processMdx } from "@/lib/content/mdx";
import { reader } from "@/lib/content/reader";
import { createI18n } from "@/lib/i18n";

export async function getStaticPaths() {
	return (
		await Promise.all(
			locales.map(async (locale) => {
				const collection = getCollectionName("projects", locale);
				const pages = await reader().collections[collection].all();

				return pages.map((page) => {
					return { params: { id: page.slug, locale }, props: { page: page.entry } };
				});
			}),
		)
	).flat();
}

const { locale } = Astro.params;

const { page } = Astro.props;

const { t } = await createI18n(locale);
const dateTime = new Intl.DateTimeFormat([locale], { dateStyle: "long" });

const documentTitle = page.title;
const {
	endDate: _endDate,
	image,
	startDate: _startDate,
	title,
	// additionalImages,
	// attachments,
	// hostingOrganizations,
	// links,
	// responsiblePersons,
} = page;
const startDate = _startDate != null ? new Date(_startDate) : undefined;
const endDate = _endDate != null ? new Date(_endDate) : undefined;
const { default: Content } = await processMdx(await page.content(), locale);
---

<PageLayout locale={locale} title={documentTitle}>
	<MainContent>
		<PageSection>
			<PageCard image={image}>
				<PageTitle>{title}</PageTitle>
				<dl class="grid gap-y-2">
					{
						startDate != null ? (
							<div>
								<dt class="uppercase text-neutral-600 text-xs tracking-wider font-medium">
									{t("ProjectPage.start-date")}
								</dt>
								<dd>
									<time datetime={startDate.toISOString()}>{dateTime.format(startDate)}</time>
								</dd>
							</div>
						) : null
					}
					{
						endDate != null ? (
							<div>
								<dt class="uppercase text-neutral-600 text-xs tracking-wider font-medium">
									{t("ProjectPage.end-date")}
								</dt>
								<dd>
									<time datetime={endDate.toISOString()}>{dateTime.format(endDate)}</time>
								</dd>
							</div>
						) : null
					}
				</dl>
				<div class="prose">
					<Content />
				</div>
			</PageCard>
		</PageSection>
	</MainContent>
</PageLayout>
